NAME
	sat - A simple incompatibility implementation of at(1).

DESCRIPTION
	sat is a simple implementation of at(1). But is not compatible
	with at(1). It is used to queue jobs to be executed later, outside
	the current controlling terminal.

	sat can also print and edit the list of queued jobs.

	If you are using autohaltd(8), you should set up hooks for at(1)
	that pauses autohaltd(8) using SIGSTOP (and resume with SIGCONT)
	when there are queued jobs. This would prevent autohaltd(8) from
	shuting down the machine while there are queued jobs but no logins.
	sat cannot stop autohaltd(8) by adding login entries, because
	autohaltd(8) will only recognise them if they are in fact true
	logins.

RATIONALE
	at(1) is far too complex.

	sat does not do natural language time parsing, it is far too complex,
	and locale dependent, for all programs to implemeent and should be
	done in a separate program. Not even GNU date(1) gets this right.
	sat does however do some trivial parsing.

	sat does not sanitise the environment. You have env(1) for that.
	Relaying on sat to sanitise the environment appropriately could prove
	to be a misfortune.

	sat does not do mailing because that is very restrictive, hooks are
	used instead.

	sat does not do system load analysis, this should be done in a
	separate program.

ENVIRONMENY
	XDG_RUNTIME_DIR
		This environment variable names the directory in which
		interprocess communication related files are stored. If
		unset or empty, /run is used.

SEE ALSO
	at(1), cron(1), sleep-until(1)

